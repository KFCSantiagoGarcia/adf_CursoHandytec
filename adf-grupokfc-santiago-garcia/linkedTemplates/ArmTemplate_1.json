{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "adf-grupokfc-santiago-garcia"
		},
		"SC_CalendarizacionTaller_properties_PL_EXAMEN_PRACTICO_parameters_fechaCorte": {
			"type": "string",
			"defaultValue": "2021-06-01"
		},
		"SC_CalendarizadoCargaInicial_properties_PL_CARGA_RANGO_FECHAS_parameters_FechaInicio": {
			"type": "string",
			"defaultValue": "2019-01-01"
		},
		"SC_CalendarizadoCargaInicial_properties_PL_CARGA_RANGO_FECHAS_parameters_FechaFin": {
			"type": "string",
			"defaultValue": "2019-12-31"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/PL_COPIA_LOCAL_A_PARQUET')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ExcelSource",
								"storeSettings": {
									"type": "FileServerReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "ID",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "ID",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "Nombre",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Nombre",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "Edad",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Edad",
											"type": "String",
											"physicalType": "UTF8"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "xlsx_EjemploClase02",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "parquet_EjemploClase02",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "CLASE02"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_EXAMEN_PRACTICO')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Generar rango fechas",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "SELECT [idIngesta]\n      ,[esquema]\n      ,[tabla]\n      ,[consulta]\n      ,[tipoTabla]\n  FROM [par].[CatIngesta]\n",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "TBL_Leer",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "Recorremos cada registro",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Generar rango fechas",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Generar rango fechas').output.value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "If Condition1",
									"type": "IfCondition",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@equals(item().tipoTabla, variables('tipoTabla'))",
											"type": "Expression"
										},
										"ifFalseActivities": [
											{
												"name": "Copia Stock",
												"type": "Copy",
												"dependsOn": [],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"source": {
														"type": "AzureSqlSource",
														"sqlReaderQuery": {
															"value": "@item().Consulta",
															"type": "Expression"
														},
														"queryTimeout": "02:00:00",
														"partitionOption": "None"
													},
													"sink": {
														"type": "DelimitedTextSink",
														"storeSettings": {
															"type": "AzureBlobFSWriteSettings"
														},
														"formatSettings": {
															"type": "DelimitedTextWriteSettings",
															"quoteAllText": true,
															"fileExtension": ".txt"
														}
													},
													"enableStaging": false,
													"translator": {
														"type": "TabularTranslator",
														"typeConversion": true,
														"typeConversionSettings": {
															"allowDataTruncation": true,
															"treatBooleanAsNumber": false
														}
													}
												},
												"inputs": [
													{
														"referenceName": "TBL_Leer",
														"type": "DatasetReference",
														"parameters": {}
													}
												],
												"outputs": [
													{
														"referenceName": "csv_Escribir",
														"type": "DatasetReference",
														"parameters": {
															"directorio": {
																"value": "@concat('Taller/', item().Esquema,'/', item().Tabla)",
																"type": "Expression"
															},
															"nombreArchivo": {
																"value": "@concat(item().Tabla,'.csv')",
																"type": "Expression"
															}
														}
													}
												]
											}
										],
										"ifTrueActivities": [
											{
												"name": "Copia History",
												"type": "Copy",
												"dependsOn": [],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"source": {
														"type": "AzureSqlSource",
														"sqlReaderQuery": {
															"value": "@replace(item().Consulta,'{{fechaCorte}}',pipeline().parameters.fechaCorte)",
															"type": "Expression"
														},
														"queryTimeout": "02:00:00",
														"partitionOption": "None"
													},
													"sink": {
														"type": "DelimitedTextSink",
														"storeSettings": {
															"type": "AzureBlobFSWriteSettings"
														},
														"formatSettings": {
															"type": "DelimitedTextWriteSettings",
															"quoteAllText": true,
															"fileExtension": ".txt"
														}
													},
													"enableStaging": false,
													"translator": {
														"type": "TabularTranslator",
														"typeConversion": true,
														"typeConversionSettings": {
															"allowDataTruncation": true,
															"treatBooleanAsNumber": false
														}
													}
												},
												"inputs": [
													{
														"referenceName": "TBL_Leer",
														"type": "DatasetReference",
														"parameters": {}
													}
												],
												"outputs": [
													{
														"referenceName": "csv_Escribir",
														"type": "DatasetReference",
														"parameters": {
															"directorio": {
																"value": "@concat('Taller/',item().Esquema,'/',item().Tabla)",
																"type": "Expression"
															},
															"nombreArchivo": {
																"value": "@concat(item().Tabla,'_',pipeline().parameters.fechaCorte)",
																"type": "Expression"
															}
														}
													}
												]
											}
										]
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"fechaCorte": {
						"type": "string"
					}
				},
				"variables": {
					"tipoTabla": {
						"type": "String",
						"defaultValue": "history"
					}
				},
				"folder": {
					"name": "EXAMEN_PRACTICO"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_MAPEO_CAMPOS')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": "SELECT\n\tID1\t\t= ID\t\t\n,\tNombre1\t= Nombre\n,\tEdad1\t= Edad\nFROM [dbo].[Cliente]",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "TRUNCATE TABLE [dbo].[ClienteNube]",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"tableOption": "autoCreate",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "ID1",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "ID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Nombre1",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Nombre",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Edad1",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "Edad",
											"type": "Int32",
											"physicalType": "int"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "TBL_ClienteLocal",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "tbl_ClienteNube",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "CLASE03"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_CARGA_RANGO_FECHAS')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Generar rango fechas",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "DECLARE @MinDate DATE = '@{pipeline().parameters.FechaInicio}',\n\t\t@MaxDate DATE = '@{pipeline().parameters.FechaFin}';\n\nSELECT CONVERT(varchar,fechaCorte,23) AS fechaCorte, MONTH(fechaCorte) as mesCorte, YEAR(fechaCorte) as anioCorte\nFROM\n(\n\tSELECT \n\tTOP(DATEDIFF(MONTH, @MinDate,@MaxDate)+1)\n\tfechaCorte= EOMONTH(DATEADD(MONTH,ROW_NUMBER() OVER (ORDER BY a.object_id)-1,@MinDate))\n\tFROM sys.all_objects a\n\tCROSS JOIN sys.all_objects b\n)fechas\n\nORDER BY fechaCorte;",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "TBL_Leer",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "Iteracion de meses",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Generar rango fechas",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@array(activity('Generar rango fechas').output.value)",
								"type": "Expression"
							},
							"isSequential": false,
							"activities": [
								{
									"name": "PL_CARGA_INCREMENTAL",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "PL_CARGA_INCREMENTAL",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"anio": {
												"value": "@item().anioCorte",
												"type": "Expression"
											},
											"mes": {
												"value": "@item().mesCorte",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"FechaInicio": {
						"type": "string"
					},
					"FechaFin": {
						"type": "string"
					}
				},
				"folder": {
					"name": "CLASE03"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SC_CalendarizacionTaller')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Se calendariza para que se ejecute todos los días a las 23h00",
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "PL_EXAMEN_PRACTICO",
							"type": "PipelineReference"
						},
						"parameters": {
							"fechaCorte": "[parameters('SC_CalendarizacionTaller_properties_PL_EXAMEN_PRACTICO_parameters_fechaCorte')]"
						}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Day",
						"interval": 1,
						"startTime": "2022-02-21T18:00:00",
						"timeZone": "SA Pacific Standard Time",
						"schedule": {
							"minutes": [
								0
							],
							"hours": [
								23
							]
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/PL_EXAMEN_PRACTICO')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SC_CalendarizadoCargaInicial')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "PL_CARGA_RANGO_FECHAS",
							"type": "PipelineReference"
						},
						"parameters": {
							"FechaInicio": "[parameters('SC_CalendarizadoCargaInicial_properties_PL_CARGA_RANGO_FECHAS_parameters_FechaInicio')]",
							"FechaFin": "[parameters('SC_CalendarizadoCargaInicial_properties_PL_CARGA_RANGO_FECHAS_parameters_FechaFin')]"
						}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Month",
						"interval": 1,
						"startTime": "2022-02-18T16:40:00",
						"endTime": "2022-02-19T21:23:00",
						"timeZone": "SA Pacific Standard Time",
						"schedule": {
							"minutes": [
								49
							],
							"hours": [
								16
							],
							"monthDays": [
								18
							]
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/PL_CARGA_RANGO_FECHAS')]"
			]
		}
	]
}